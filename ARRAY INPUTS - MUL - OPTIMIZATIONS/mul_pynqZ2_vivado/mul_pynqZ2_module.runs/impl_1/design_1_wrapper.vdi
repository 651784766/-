#-----------------------------------------------------------
# Vivado v2019.1 (64-bit)
# SW Build 2552052 on Fri May 24 14:47:09 MDT 2019
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
# Start of session at: Thu Dec 12 21:31:30 2019
# Process ID: 14219
# Current directory: /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/design_1_wrapper.vdi
# Journal file: /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/vivado.jou
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_matrix_pynqZ2/solution1/impl/ip'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/mklab/Xilinx/Vivado/2019.1/data/ip'.
Command: link_design -top design_1_wrapper -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-454] Reading design checkpoint '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_8/design_1_axi_smc_8.dcp' for cell 'design_1_i/axi_smc'
INFO: [Project 1-454] Reading design checkpoint '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_mul_matrix_0_10/design_1_mul_matrix_0_10.dcp' for cell 'design_1_i/mul_matrix_0'
INFO: [Project 1-454] Reading design checkpoint '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_10/design_1_processing_system7_0_10.dcp' for cell 'design_1_i/processing_system7_0'
INFO: [Project 1-454] Reading design checkpoint '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_7/design_1_rst_ps7_0_100M_7.dcp' for cell 'design_1_i/rst_ps7_0_100M'
INFO: [Project 1-454] Reading design checkpoint '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/ps7_0_axi_periph/s00_couplers/auto_pc'
INFO: [Netlist 29-17] Analyzing 2823 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2019.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_10/design_1_processing_system7_0_10.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_10/design_1_processing_system7_0_10.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_7/design_1_rst_ps7_0_100M_7_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_7/design_1_rst_ps7_0_100M_7_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_7/design_1_rst_ps7_0_100M_7.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_7/design_1_rst_ps7_0_100M_7.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_8/bd_0/ip/ip_1/bd_69c2_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_8/bd_0/ip/ip_1/bd_69c2_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_8/bd_0/ip/ip_1/bd_69c2_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_8/bd_0/ip/ip_1/bd_69c2_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/home/mklab/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2022.066 ; gain = 0.000 ; free physical = 4862 ; free virtual = 138476
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 91 instances were transformed.
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 91 instances

15 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:10 ; elapsed = 00:00:10 . Memory (MB): peak = 2022.066 ; gain = 585.496 ; free physical = 4862 ; free virtual = 138476
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.84 . Memory (MB): peak = 2022.066 ; gain = 0.000 ; free physical = 4857 ; free virtual = 138471

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 104ef2f67

Time (s): cpu = 00:00:09 ; elapsed = 00:00:06 . Memory (MB): peak = 2496.559 ; gain = 474.492 ; free physical = 4410 ; free virtual = 138024

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 10 inverter(s) to 60 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 1bc166d73

Time (s): cpu = 00:00:03 ; elapsed = 00:00:01 . Memory (MB): peak = 2614.465 ; gain = 0.000 ; free physical = 4358 ; free virtual = 137971
INFO: [Opt 31-389] Phase Retarget created 65 cells and removed 489 cells
INFO: [Opt 31-1021] In phase Retarget, 15 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 25fc14bb7

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2614.465 ; gain = 0.000 ; free physical = 4358 ; free virtual = 137971
INFO: [Opt 31-389] Phase Constant propagation created 132 cells and removed 585 cells
INFO: [Opt 31-1021] In phase Constant propagation, 20 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 20c3229b4

Time (s): cpu = 00:00:05 ; elapsed = 00:00:03 . Memory (MB): peak = 2614.465 ; gain = 0.000 ; free physical = 4356 ; free virtual = 137970
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 761 cells
INFO: [Opt 31-1021] In phase Sweep, 25 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 20c3229b4

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 2614.465 ; gain = 0.000 ; free physical = 4356 ; free virtual = 137970
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 20c3229b4

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 2614.465 ; gain = 0.000 ; free physical = 4356 ; free virtual = 137970
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 20c3229b4

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 2614.465 ; gain = 0.000 ; free physical = 4357 ; free virtual = 137970
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 15 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              65  |             489  |                                             15  |
|  Constant propagation         |             132  |             585  |                                             20  |
|  Sweep                        |               0  |             761  |                                             25  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                             15  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.04 . Memory (MB): peak = 2614.465 ; gain = 0.000 ; free physical = 4357 ; free virtual = 137971
Ending Logic Optimization Task | Checksum: 18ea7a47e

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 2614.465 ; gain = 0.000 ; free physical = 4357 ; free virtual = 137971

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=1.147 | TNS=0.000 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 2 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 0 Total Ports: 4
Ending PowerOpt Patch Enables Task | Checksum: 18ea7a47e

Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.09 . Memory (MB): peak = 2864.004 ; gain = 0.000 ; free physical = 4303 ; free virtual = 137917
Ending Power Optimization Task | Checksum: 18ea7a47e

Time (s): cpu = 00:00:14 ; elapsed = 00:00:05 . Memory (MB): peak = 2864.004 ; gain = 249.539 ; free physical = 4329 ; free virtual = 137943

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 18ea7a47e

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2864.004 ; gain = 0.000 ; free physical = 4329 ; free virtual = 137943

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 2864.004 ; gain = 0.000 ; free physical = 4329 ; free virtual = 137943
Ending Netlist Obfuscation Task | Checksum: 18ea7a47e

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 2864.004 ; gain = 0.000 ; free physical = 4329 ; free virtual = 137943
INFO: [Common 17-83] Releasing license: Implementation
42 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:32 ; elapsed = 00:00:19 . Memory (MB): peak = 2864.004 ; gain = 841.938 ; free physical = 4329 ; free virtual = 137943
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 2864.004 ; gain = 0.000 ; free physical = 4329 ; free virtual = 137943
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2864.004 ; gain = 0.000 ; free physical = 4326 ; free virtual = 137942
INFO: [Common 17-1381] The checkpoint '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4322 ; free virtual = 137942
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 119caf3e7

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.04 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4322 ; free virtual = 137942
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4322 ; free virtual = 137942

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 234622b6

Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4264 ; free virtual = 137884

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 1e04dc918

Time (s): cpu = 00:00:14 ; elapsed = 00:00:06 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4227 ; free virtual = 137847

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 1e04dc918

Time (s): cpu = 00:00:14 ; elapsed = 00:00:06 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4227 ; free virtual = 137847
Phase 1 Placer Initialization | Checksum: 1e04dc918

Time (s): cpu = 00:00:14 ; elapsed = 00:00:06 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4227 ; free virtual = 137847

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 13ac8c3e1

Time (s): cpu = 00:00:17 ; elapsed = 00:00:07 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4205 ; free virtual = 137825

Phase 2.2 Global Placement Core

Phase 2.2.1 Physical Synthesis In Placer
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-457] Pass 1. Identified 10 candidate cells for DSP register optimization.
INFO: [Physopt 32-665] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_49_fu_8035_p2. 15 registers were pushed out.
INFO: [Physopt 32-666] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_7_reg_10095_reg. No change.
INFO: [Physopt 32-665] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_17_reg_10760_reg. 15 registers were pushed out.
INFO: [Physopt 32-666] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_50_fu_8142_p2. No change.
INFO: [Physopt 32-666] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_24_reg_11236_reg. No change.
INFO: [Physopt 32-666] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_25_reg_11292_reg. No change.
INFO: [Physopt 32-666] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_39_reg_12223_reg. No change.
INFO: [Physopt 32-665] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_50_reg_12970_reg. 15 registers were pushed out.
INFO: [Physopt 32-666] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_39_fu_7141_p2. No change.
INFO: [Physopt 32-665] Processed cell design_1_i/mul_matrix_0/inst/mul_ln30_6_reg_10039_reg. 15 registers were pushed out.
INFO: [Physopt 32-775] End 2 Pass. Optimized 4 nets or cells. Created 60 new cells, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00.14 ; elapsed = 00:00:00.14 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4178 ; free virtual = 137798
INFO: [Physopt 32-677] No candidate cells for Shift Register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-526] No candidate cells for BRAM register optimization found in the design
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-949] No candidate nets found for HD net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4178 ; free virtual = 137798

Summary of Physical Synthesis Optimizations
============================================


----------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                  |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
----------------------------------------------------------------------------------------------------------------------------------------
|  Very High Fanout              |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                  |           60  |              0  |                     4  |           0  |           1  |  00:00:01  |
|  Shift Register                |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  BRAM Register                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  HD Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                         |           60  |              0  |                     4  |           0  |           5  |  00:00:01  |
----------------------------------------------------------------------------------------------------------------------------------------


Phase 2.2.1 Physical Synthesis In Placer | Checksum: 20e07cbd6

Time (s): cpu = 00:01:06 ; elapsed = 00:00:22 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4179 ; free virtual = 137799
Phase 2.2 Global Placement Core | Checksum: 1dac4d383

Time (s): cpu = 00:01:08 ; elapsed = 00:00:23 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4177 ; free virtual = 137797
Phase 2 Global Placement | Checksum: 1dac4d383

Time (s): cpu = 00:01:08 ; elapsed = 00:00:23 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4186 ; free virtual = 137806

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 2141bd2f3

Time (s): cpu = 00:01:11 ; elapsed = 00:00:24 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4180 ; free virtual = 137800

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 210056df9

Time (s): cpu = 00:01:19 ; elapsed = 00:00:27 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4171 ; free virtual = 137791

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 19a405aec

Time (s): cpu = 00:01:19 ; elapsed = 00:00:27 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4171 ; free virtual = 137791

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 211fbd6a9

Time (s): cpu = 00:01:19 ; elapsed = 00:00:27 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4171 ; free virtual = 137791

Phase 3.5 Fast Optimization
Phase 3.5 Fast Optimization | Checksum: 207ee1d1e

Time (s): cpu = 00:01:26 ; elapsed = 00:00:29 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4172 ; free virtual = 137792

Phase 3.6 Small Shape Detail Placement
Phase 3.6 Small Shape Detail Placement | Checksum: 2a57620cd

Time (s): cpu = 00:01:31 ; elapsed = 00:00:34 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4156 ; free virtual = 137776

Phase 3.7 Re-assign LUT pins
Phase 3.7 Re-assign LUT pins | Checksum: 23d71bedb

Time (s): cpu = 00:01:32 ; elapsed = 00:00:35 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4157 ; free virtual = 137777

Phase 3.8 Pipeline Register Optimization
Phase 3.8 Pipeline Register Optimization | Checksum: 1ebad6a82

Time (s): cpu = 00:01:33 ; elapsed = 00:00:35 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4157 ; free virtual = 137777

Phase 3.9 Fast Optimization
Phase 3.9 Fast Optimization | Checksum: 2197a8158

Time (s): cpu = 00:01:40 ; elapsed = 00:00:37 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4157 ; free virtual = 137777
Phase 3 Detail Placement | Checksum: 2197a8158

Time (s): cpu = 00:01:40 ; elapsed = 00:00:37 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4157 ; free virtual = 137777

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 178a59a81

Phase 4.1.1.1 BUFG Insertion
INFO: [Place 46-33] Processed net design_1_i/mul_matrix_0/inst/mul_matrix_gmem_m_axi_U/bus_write/buff_wdata/ap_rst_n_0, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 1 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 1, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Phase 4.1.1.1 BUFG Insertion | Checksum: 178a59a81

Time (s): cpu = 00:01:50 ; elapsed = 00:00:40 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4157 ; free virtual = 137777
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.505. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 17a4e2164

Time (s): cpu = 00:01:52 ; elapsed = 00:00:42 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4155 ; free virtual = 137776
Phase 4.1 Post Commit Optimization | Checksum: 17a4e2164

Time (s): cpu = 00:01:52 ; elapsed = 00:00:42 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4155 ; free virtual = 137776

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 17a4e2164

Time (s): cpu = 00:01:53 ; elapsed = 00:00:42 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4155 ; free virtual = 137775

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 17a4e2164

Time (s): cpu = 00:01:53 ; elapsed = 00:00:42 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4155 ; free virtual = 137775

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4155 ; free virtual = 137775
Phase 4.4 Final Placement Cleanup | Checksum: 1e0f4423a

Time (s): cpu = 00:01:53 ; elapsed = 00:00:42 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4155 ; free virtual = 137775
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1e0f4423a

Time (s): cpu = 00:01:53 ; elapsed = 00:00:42 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4155 ; free virtual = 137775
Ending Placer Task | Checksum: f806c7de

Time (s): cpu = 00:01:53 ; elapsed = 00:00:42 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4155 ; free virtual = 137775
INFO: [Common 17-83] Releasing license: Implementation
83 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:56 ; elapsed = 00:00:44 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4183 ; free virtual = 137803
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4183 ; free virtual = 137803
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:04 ; elapsed = 00:00:01 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4119 ; free virtual = 137785
INFO: [Common 17-1381] The checkpoint '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:08 ; elapsed = 00:00:05 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4174 ; free virtual = 137805
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.14 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4164 ; free virtual = 137795
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.32 ; elapsed = 00:00:00.36 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4171 ; free virtual = 137802
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs
Checksum: PlaceDB: 147f883a ConstDB: 0 ShapeSum: e3873fa4 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 3a817c93

Time (s): cpu = 00:00:18 ; elapsed = 00:00:12 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4038 ; free virtual = 137669
Post Restoration Checksum: NetGraph: 2686b258 NumContArr: 13faca3b Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 3a817c93

Time (s): cpu = 00:00:18 ; elapsed = 00:00:13 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 4006 ; free virtual = 137637

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 3a817c93

Time (s): cpu = 00:00:19 ; elapsed = 00:00:13 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 3970 ; free virtual = 137601

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 3a817c93

Time (s): cpu = 00:00:19 ; elapsed = 00:00:13 . Memory (MB): peak = 2928.035 ; gain = 0.000 ; free physical = 3970 ; free virtual = 137601
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 208cd0dd5

Time (s): cpu = 00:00:29 ; elapsed = 00:00:17 . Memory (MB): peak = 2982.695 ; gain = 54.660 ; free physical = 3942 ; free virtual = 137573
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.516  | TNS=0.000  | WHS=-0.215 | THS=-145.349|

Phase 2 Router Initialization | Checksum: 2106a346b

Time (s): cpu = 00:00:35 ; elapsed = 00:00:18 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3940 ; free virtual = 137571

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 33534
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 33534
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0


Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 1763109a8

Time (s): cpu = 00:00:43 ; elapsed = 00:00:20 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3934 ; free virtual = 137565

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 7256
 Number of Nodes with overlaps = 2780
 Number of Nodes with overlaps = 1107
 Number of Nodes with overlaps = 420
 Number of Nodes with overlaps = 178
 Number of Nodes with overlaps = 51
 Number of Nodes with overlaps = 22
 Number of Nodes with overlaps = 8
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.099  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: d25bfd8b

Time (s): cpu = 00:02:16 ; elapsed = 00:00:45 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3926 ; free virtual = 137557

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.099  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1b256632b

Time (s): cpu = 00:02:17 ; elapsed = 00:00:46 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3926 ; free virtual = 137557
Phase 4 Rip-up And Reroute | Checksum: 1b256632b

Time (s): cpu = 00:02:17 ; elapsed = 00:00:46 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3926 ; free virtual = 137557

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 1646e8703

Time (s): cpu = 00:02:18 ; elapsed = 00:00:47 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3927 ; free virtual = 137558
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.112  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 5.1 Delay CleanUp | Checksum: 1646e8703

Time (s): cpu = 00:02:19 ; elapsed = 00:00:47 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3928 ; free virtual = 137559

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1646e8703

Time (s): cpu = 00:02:19 ; elapsed = 00:00:47 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3928 ; free virtual = 137559
Phase 5 Delay and Skew Optimization | Checksum: 1646e8703

Time (s): cpu = 00:02:19 ; elapsed = 00:00:47 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3928 ; free virtual = 137559

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 17745d5b9

Time (s): cpu = 00:02:21 ; elapsed = 00:00:47 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3927 ; free virtual = 137558
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.112  | TNS=0.000  | WHS=0.019  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 196b3f887

Time (s): cpu = 00:02:21 ; elapsed = 00:00:47 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3927 ; free virtual = 137558
Phase 6 Post Hold Fix | Checksum: 196b3f887

Time (s): cpu = 00:02:21 ; elapsed = 00:00:48 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3927 ; free virtual = 137558

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 10.7189 %
  Global Horizontal Routing Utilization  = 13.1824 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 183f8983e

Time (s): cpu = 00:02:21 ; elapsed = 00:00:48 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3927 ; free virtual = 137558

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 183f8983e

Time (s): cpu = 00:02:21 ; elapsed = 00:00:48 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3926 ; free virtual = 137557

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 14fc9d4a5

Time (s): cpu = 00:02:23 ; elapsed = 00:00:50 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3928 ; free virtual = 137559

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.112  | TNS=0.000  | WHS=0.019  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 14fc9d4a5

Time (s): cpu = 00:02:23 ; elapsed = 00:00:50 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3928 ; free virtual = 137559
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:02:23 ; elapsed = 00:00:50 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3978 ; free virtual = 137609

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
102 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:02:26 ; elapsed = 00:00:51 . Memory (MB): peak = 3012.695 ; gain = 84.660 ; free physical = 3978 ; free virtual = 137609
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3012.695 ; gain = 0.000 ; free physical = 3978 ; free virtual = 137609
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:04 ; elapsed = 00:00:01 . Memory (MB): peak = 3012.695 ; gain = 0.000 ; free physical = 3898 ; free virtual = 137587
INFO: [Common 17-1381] The checkpoint '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:08 ; elapsed = 00:00:05 . Memory (MB): peak = 3012.695 ; gain = 0.000 ; free physical = 3964 ; free virtual = 137608
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
114 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 3137.883 ; gain = 0.000 ; free physical = 3884 ; free virtual = 137538
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [Common 17-206] Exiting Vivado at Thu Dec 12 21:34:14 2019...
#-----------------------------------------------------------
# Vivado v2019.1 (64-bit)
# SW Build 2552052 on Fri May 24 14:47:09 MDT 2019
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
# Start of session at: Thu Dec 12 21:36:10 2019
# Process ID: 28139
# Current directory: /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/design_1_wrapper.vdi
# Journal file: /media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/vivado.jou
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.06 . Memory (MB): peak = 1389.926 ; gain = 0.000 ; free physical = 5332 ; free virtual = 138987
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Netlist 29-17] Analyzing 2771 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2019.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2408.824 ; gain = 25.906 ; free physical = 4301 ; free virtual = 137956
Restored from archive | CPU: 1.680000 secs | Memory: 40.250504 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2408.824 ; gain = 25.906 ; free physical = 4301 ; free virtual = 137956
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2408.824 ; gain = 0.000 ; free physical = 4309 ; free virtual = 137964
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 51 instances were transformed.
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 51 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2019.1 (64-bit) build 2552052
open_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:16 . Memory (MB): peak = 2408.824 ; gain = 1018.898 ; free physical = 4309 ; free virtual = 137964
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/mklab/Xilinx/Vivado/2019.1/data/ip'.
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_10_fu_4563_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_10_fu_4563_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_11_fu_4635_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_11_fu_4635_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_12_fu_4742_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_12_fu_4742_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_13_fu_4814_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_13_fu_4814_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_14_fu_4921_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_14_fu_4921_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_15_fu_4993_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_15_fu_4993_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_16_fu_5100_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_16_fu_5100_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_17_fu_5172_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_17_fu_5172_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_17_reg_10760_reg output design_1_i/mul_matrix_0/inst/mul_ln30_17_reg_10760_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_18_fu_5279_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_18_fu_5279_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_19_fu_5351_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_19_fu_5351_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_1_fu_3740_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_1_fu_3740_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_20_fu_5458_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_20_fu_5458_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_21_fu_5530_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_21_fu_5530_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_22_fu_5637_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_22_fu_5637_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_23_fu_5709_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_23_fu_5709_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_24_fu_5816_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_24_fu_5816_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_25_fu_5888_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_25_fu_5888_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_26_fu_5995_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_26_fu_5995_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_27_fu_6067_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_27_fu_6067_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_28_fu_6174_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_28_fu_6174_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_29_fu_6246_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_29_fu_6246_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_2_fu_3847_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_2_fu_3847_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_30_fu_6353_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_30_fu_6353_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_31_fu_6425_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_31_fu_6425_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_32_fu_6532_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_32_fu_6532_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_33_fu_6604_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_33_fu_6604_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_34_fu_6711_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_34_fu_6711_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_35_fu_6783_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_35_fu_6783_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_36_fu_6890_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_36_fu_6890_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_37_fu_6962_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_37_fu_6962_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_38_fu_7069_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_38_fu_7069_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_39_fu_7141_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_39_fu_7141_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_3_fu_3919_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_3_fu_3919_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_40_fu_7248_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_40_fu_7248_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_41_fu_7320_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_41_fu_7320_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_42_fu_7427_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_42_fu_7427_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_43_fu_7499_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_43_fu_7499_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_44_fu_7606_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_44_fu_7606_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_45_fu_7678_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_45_fu_7678_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_46_fu_7785_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_46_fu_7785_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_47_fu_7856_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_47_fu_7856_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_48_fu_7963_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_48_fu_7963_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_49_fu_8035_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_49_fu_8035_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_49_fu_8035_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_49_fu_8035_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_4_fu_4026_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_4_fu_4026_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_50_fu_8142_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_50_fu_8142_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_50_reg_12970_reg output design_1_i/mul_matrix_0/inst/mul_ln30_50_reg_12970_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_51_fu_8214_p2__0 output design_1_i/mul_matrix_0/inst/mul_ln30_51_fu_8214_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_52_fu_8321_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_52_fu_8321_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_53_fu_8393_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_53_fu_8393_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_54_fu_8500_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_54_fu_8500_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_55_fu_8572_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_55_fu_8572_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_56_fu_8679_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_56_fu_8679_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_57_fu_8751_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_57_fu_8751_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_58_fu_8858_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_58_fu_8858_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_59_fu_8930_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_59_fu_8930_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_5_fu_4098_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_5_fu_4098_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_60_fu_9037_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_60_fu_9037_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_61_fu_9109_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_61_fu_9109_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_62_fu_9218_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_62_fu_9218_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_63_fu_9296_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_63_fu_9296_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_6_fu_4205_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_6_fu_4205_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_6_reg_10039_reg output design_1_i/mul_matrix_0/inst/mul_ln30_6_reg_10039_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_7_fu_4277_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_7_fu_4277_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_8_fu_4384_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_8_fu_4384_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_9_fu_4456_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_9_fu_4456_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_fu_3668_p2 output design_1_i/mul_matrix_0/inst/mul_ln30_fu_3668_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_10_fu_4563_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_10_fu_4563_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_10_fu_4563_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_10_fu_4563_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_10_reg_10305_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_10_reg_10305_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_11_fu_4635_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_11_fu_4635_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_11_fu_4635_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_11_fu_4635_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_11_reg_10361_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_11_reg_10361_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_12_fu_4742_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_12_fu_4742_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_12_fu_4742_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_12_fu_4742_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_12_reg_10438_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_12_reg_10438_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_13_fu_4814_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_13_fu_4814_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_13_fu_4814_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_13_fu_4814_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_13_reg_10494_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_13_reg_10494_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_14_fu_4921_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_14_fu_4921_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_14_fu_4921_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_14_fu_4921_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_14_reg_10571_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_14_reg_10571_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_15_fu_4993_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_15_fu_4993_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_15_fu_4993_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_15_fu_4993_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_15_reg_10627_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_15_reg_10627_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_16_fu_5100_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_16_fu_5100_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_16_fu_5100_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_16_fu_5100_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_16_reg_10704_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_16_reg_10704_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_17_fu_5172_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_17_fu_5172_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_17_fu_5172_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_17_fu_5172_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_17_reg_10760_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_17_reg_10760_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_18_fu_5279_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_18_fu_5279_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_18_fu_5279_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_18_fu_5279_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_18_reg_10837_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_18_reg_10837_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_19_fu_5351_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_19_fu_5351_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_19_fu_5351_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_19_fu_5351_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_19_reg_10893_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_19_reg_10893_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_1_fu_3740_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_1_fu_3740_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_1_fu_3740_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_1_fu_3740_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_1_reg_9696_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_1_reg_9696_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_20_fu_5458_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_20_fu_5458_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_20_fu_5458_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_20_fu_5458_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_20_reg_10970_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_20_reg_10970_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_21_fu_5530_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_21_fu_5530_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_21_fu_5530_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_21_fu_5530_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_21_reg_11026_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_21_reg_11026_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_22_fu_5637_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_22_fu_5637_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_22_fu_5637_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_22_fu_5637_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_22_reg_11103_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_22_reg_11103_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_23_fu_5709_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_23_fu_5709_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_23_fu_5709_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_23_fu_5709_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_23_reg_11159_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_23_reg_11159_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_24_fu_5816_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_24_fu_5816_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_24_fu_5816_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_24_fu_5816_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_24_reg_11236_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_24_reg_11236_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_25_fu_5888_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_25_fu_5888_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_25_fu_5888_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_25_fu_5888_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_25_reg_11292_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_25_reg_11292_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_26_fu_5995_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_26_fu_5995_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_26_fu_5995_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_26_fu_5995_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_26_reg_11369_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_26_reg_11369_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_27_fu_6067_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_27_fu_6067_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_27_fu_6067_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_27_fu_6067_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_27_reg_11425_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_27_reg_11425_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_28_fu_6174_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_28_fu_6174_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_28_fu_6174_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_28_fu_6174_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_28_reg_11502_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_28_reg_11502_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_29_fu_6246_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_29_fu_6246_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_29_fu_6246_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_29_fu_6246_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_29_reg_11558_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_29_reg_11558_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_2_fu_3847_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_2_fu_3847_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_2_fu_3847_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_2_fu_3847_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_2_reg_9773_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_2_reg_9773_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_30_fu_6353_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_30_fu_6353_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_30_fu_6353_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_30_fu_6353_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_30_reg_11635_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_30_reg_11635_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_31_fu_6425_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_31_fu_6425_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_31_fu_6425_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_31_fu_6425_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_31_reg_11691_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_31_reg_11691_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_32_fu_6532_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_32_fu_6532_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_32_fu_6532_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_32_fu_6532_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_32_reg_11768_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_32_reg_11768_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_33_fu_6604_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_33_fu_6604_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_33_fu_6604_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_33_fu_6604_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_33_reg_11824_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_33_reg_11824_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_34_fu_6711_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_34_fu_6711_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_34_fu_6711_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_34_fu_6711_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_34_reg_11901_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_34_reg_11901_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_35_fu_6783_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_35_fu_6783_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_35_fu_6783_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_35_fu_6783_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_35_reg_11957_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_35_reg_11957_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_36_fu_6890_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_36_fu_6890_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_36_fu_6890_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_36_fu_6890_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_36_reg_12034_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_36_reg_12034_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_37_fu_6962_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_37_fu_6962_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_37_fu_6962_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_37_fu_6962_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_37_reg_12090_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_37_reg_12090_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_38_fu_7069_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_38_fu_7069_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_38_fu_7069_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_38_fu_7069_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_38_reg_12167_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_38_reg_12167_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_39_fu_7141_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_39_fu_7141_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_39_fu_7141_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_39_fu_7141_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_39_reg_12223_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_39_reg_12223_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_3_fu_3919_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_3_fu_3919_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_3_fu_3919_p2__0 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_3_fu_3919_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_3_reg_9829_reg multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_3_reg_9829_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/mul_matrix_0/inst/mul_ln30_40_fu_7248_p2 multiplier stage design_1_i/mul_matrix_0/inst/mul_ln30_40_fu_7248_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
INFO: [DRC REQP-31] enum_PREG_0_connects_CEP_GND: design_1_i/mul_matrix_0/inst/mul_ln30_17_reg_10760_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
INFO: [DRC REQP-31] enum_PREG_0_connects_CEP_GND: design_1_i/mul_matrix_0/inst/mul_ln30_49_fu_8035_p2: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
INFO: [DRC REQP-31] enum_PREG_0_connects_CEP_GND: design_1_i/mul_matrix_0/inst/mul_ln30_50_reg_12970_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
INFO: [DRC REQP-31] enum_PREG_0_connects_CEP_GND: design_1_i/mul_matrix_0/inst/mul_ln30_6_reg_10039_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 242 Warnings, 4 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-118] WebTalk data collection is enabled (User setting is ON. Install Setting is ON.).
INFO: [Common 17-186] '/media/mklab/TerabyteHD/HOME_MKL/WORK/internal/mul_pynqZ2_module/mul_pynqZ2_module.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Thu Dec 12 21:36:50 2019. For additional details about this file, please refer to the WebTalk help file at /home/mklab/Xilinx/Vivado/2019.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
32 Infos, 168 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:36 ; elapsed = 00:00:19 . Memory (MB): peak = 2935.828 ; gain = 506.191 ; free physical = 4228 ; free virtual = 137888
INFO: [Common 17-206] Exiting Vivado at Thu Dec 12 21:36:50 2019...
